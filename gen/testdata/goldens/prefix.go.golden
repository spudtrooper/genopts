package goldens

type PrefixOption func(*prefixOptionImpl)

type PrefixOptions interface {
	Foo() bool
	Bar() string
	Baz() float64
}

func PrefixFoo(foo bool) PrefixOption {
	return func(opts *prefixOptionImpl) {
		opts.foo = foo
	}
}
func PrefixFooFlag(foo *bool) PrefixOption {
	return func(opts *prefixOptionImpl) {
		opts.foo = *foo
	}
}

func PrefixBar(bar string) PrefixOption {
	return func(opts *prefixOptionImpl) {
		opts.bar = bar
	}
}
func PrefixBarFlag(bar *string) PrefixOption {
	return func(opts *prefixOptionImpl) {
		opts.bar = *bar
	}
}

func PrefixBaz(baz float64) PrefixOption {
	return func(opts *prefixOptionImpl) {
		opts.baz = baz
	}
}
func PrefixBazFlag(baz *float64) PrefixOption {
	return func(opts *prefixOptionImpl) {
		opts.baz = *baz
	}
}

type prefixOptionImpl struct {
	foo bool
	bar string
	baz float64
}

func (p *prefixOptionImpl) Foo() bool    { return p.foo }
func (p *prefixOptionImpl) Bar() string  { return p.bar }
func (p *prefixOptionImpl) Baz() float64 { return p.baz }

func makePrefixOptionImpl(opts ...PrefixOption) *prefixOptionImpl {
	res := &prefixOptionImpl{}
	for _, opt := range opts {
		opt(res)
	}
	return res
}

func MakePrefixOptions(opts ...PrefixOption) PrefixOptions {
	return makePrefixOptionImpl(opts...)
}
